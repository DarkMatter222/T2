START: 15;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && arg2 > -1 && arg2 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && arg2 > 99 && arg2 = arg3 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 2;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 < 100 && arg2 = arg3 && arg2+1 = arg2P && arg2+1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 < 100 && arg2 = arg3 && arg2 = arg1P && arg2 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 3;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 5;

FROM: 5;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 5;

FROM: 5;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 6;

FROM: 6;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 6;

FROM: 6;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 7;

FROM: 7;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 7;

FROM: 7;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 8;

FROM: 8;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 8;

FROM: 8;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 9;

FROM: 9;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 9;

FROM: 9;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 10;

FROM: 10;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 10;

FROM: 10;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 11;

FROM: 11;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 11;

FROM: 11;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 12;

FROM: 12;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 12;

FROM: 12;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3 && arg1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 13;

FROM: 13;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 0 && arg2 = arg3 && arg2-1 = arg2P && arg2-1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 13;

FROM: 13;
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg2 && 0 = arg3);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 14;

FROM: 14;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 14;

FROM: 15;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 0;

