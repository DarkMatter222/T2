START: 4;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg1P-1 <= arg1 && arg2 > -1 && arg2P-201 <= arg1 && arg1 > 0 && arg1P > 1 && arg2P > 201 && arg2 = arg3P && 0 = arg4P && 0 = arg5P && 200 = arg6P && 200 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 1;
 arg8P := nondet();
 x11 := nondet();
 x12 := nondet();
 assume(arg3 > 0 && arg3-1 < arg3 && arg1 >= x11 && arg1 > 0 && arg2 > 0 && x11 > 0 && x12 > 0 && arg4+2 <= arg1 && arg5+2 <= arg1 && arg2 >= arg7+2 && arg6+2 <= arg2);
 arg8 := arg8P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg3 > 0 && arg3-1 < arg3 && arg1 >= arg1P && arg1 > 0 && arg2 > 0 && arg1P > 0 && arg2P > 0 && arg4+2 <= arg1 && arg5+2 <= arg1 && arg6+2 <= arg2 && arg2 >= arg7+2 && arg4+arg5+arg6-arg7-2*arg6P >= 0 && arg4+arg5+arg6-arg7-2*arg6P < 2 && arg6+arg7+arg5-arg4-2*arg7P < 2 && arg6+arg7+arg5-arg4-2*arg7P >= 0 && arg3-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 1;
 arg3P := nondet();
 arg8P := nondet();
 x22 := nondet();
 x21 := nondet();
 assume(x22 <= arg2 && arg1 > 0 && arg2 > 0 && x21 > 0 && x22 > 0 && arg4+2 <= arg1 && arg5+2 <= arg1 && arg7+2 <= arg2 && arg6+2 <= arg2 && 1 = arg3 && 1 = arg3P);
 arg3 := arg3P;
 arg8 := arg8P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg4P <= arg2 && arg1 > 0 && arg2 > 0 && arg3P > 0 && arg4P > 0 && arg4+2 <= arg1 && arg5+2 <= arg1 && arg6+2 <= arg2 && arg7+2 <= arg2 && arg6+arg7+arg5-arg4-2*arg6P >= 0 && arg6+arg7+arg5-arg4-2*arg6P < 2 && arg4+arg5+arg6-arg7-2*arg5P < 2 && arg4+arg5+arg6-arg7-2*arg5P >= 0 && 1 = arg3 && 1 = arg1P && 0 = arg2P && arg6 = arg7P && arg7 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 3;

FROM: 1;
 arg8P := nondet();
 x33 := nondet();
 x32 := nondet();
 assume(arg3 > 0 && arg3-1 < arg3 && x33 <= arg2 && arg1 > 0 && arg2 > 0 && x32 > 0 && x33 > 0 && arg4+2 <= arg1 && arg5+2 <= arg1 && arg7+2 <= arg2 && arg6+2 <= arg2);
 arg8 := arg8P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg3 > 0 && arg3-1 < arg3 && arg4P <= arg2 && arg1 > 0 && arg2 > 0 && arg3P > 0 && arg4P > 0 && arg4+2 <= arg1 && arg5+2 <= arg1 && arg6+2 <= arg2 && arg7+2 <= arg2 && arg4+arg5+arg6-arg7-2*arg5P >= 0 && arg4+arg5+arg6-arg7-2*arg5P < 2 && arg6+arg7+arg5-arg4-2*arg6P < 2 && arg6+arg7+arg5-arg4-2*arg6P >= 0 && arg3 = arg1P && arg3-1 = arg2P && arg6 = arg7P && arg7 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg2 < arg1 && arg1 > 0 && arg1P <= arg3 && arg2P <= arg4 && arg3 > 0 && arg4 > 0 && arg1P > 0 && arg2P > 0 && arg5+2 <= arg3 && arg6+2 <= arg3 && arg8+2 <= arg4 && arg7+2 <= arg4 && arg2 = arg3P && arg5 = arg4P && arg6 = arg5P && arg7 = arg6P && arg8 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 0;

