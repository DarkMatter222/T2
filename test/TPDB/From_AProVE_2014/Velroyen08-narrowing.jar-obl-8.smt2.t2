START: 5;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg2 > -1 && 20 = arg1P && 0 = arg2P && arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg3 < arg1 && arg1 > -1 && arg2 < 0 && arg3+1 = arg3P && arg1-2 = arg4P);
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg3 < arg1 && arg1 > -1 && arg2 > 0 && arg3+1 = arg3P && arg1-2 = arg4P);
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > -1 && arg3 > 0 && arg3 < arg1 && 0 = arg2 && arg3-1 = arg2P && arg1-2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg1 = arg3 && arg1-1 = arg2P && arg1-2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 2;
 arg4P := nondet();
 assume(arg4 > arg3);
 arg4 := arg4P;
TO: 1;

FROM: 2;
 arg4P := nondet();
 assume(arg4 < arg3);
 arg4 := arg4P;
TO: 1;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > arg2 && 0 = arg2P && arg2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 < arg2 && 0 = arg2P && arg2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > arg2 && 0 = arg2P && arg2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 < arg2 && 0 = arg2P && arg2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg1 < 3 && 0 = arg3 && 1 = arg2P && 1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 3 && 0 = arg3 && 1 = arg2P && 1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg4P := nondet();
 assume(arg3 = arg4 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(0 = arg1 && 0 = arg3 && 0 = arg1P && 0 = arg2P && -1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2 = arg3 && arg1-1 = arg1P && 0 = arg2P && arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2 = arg3 && arg1-1 = arg1P && 0 = arg2P && arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(3 = arg1 && 0 = arg3 && 2 = arg1P && 1 = arg2P && 1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

