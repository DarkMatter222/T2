START: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 0 && arg2 > -1 && arg2 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 x5 := nondet();
 x6 := nondet();
 assume(arg1 > 1 && arg1 > x5 && arg1-2*x6 = 0);
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 x9 := nondet();
 assume(arg1 > 1 && arg1-2*x9 = 0 && arg1 > arg1P && arg1-2*arg1P >= 0 && arg1-2*arg1P < 2 && arg1-2*x9 < 2 && arg1-2*x9 >= 0);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 x11 := nondet();
 assume(arg1-2*x11 = 1 && 3*arg1 > 0 && arg1 > 1);
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 x13 := nondet();
 assume(arg1-2*x13 = 1 && arg1 > 1 && 3*arg1 > 0 && arg1-2*x13 < 2 && arg1-2*x13 >= 0 && 3*arg1+1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 0;

