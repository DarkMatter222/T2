START: 4;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg1P && 0 = arg2P && 0 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > -1 && arg1 > -1 && arg2 < 1001 && arg2 = arg3 && arg1+arg2 = arg1P && arg2+1 = arg2P && arg2+1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 1000 && arg2 = arg3 && 0 = arg1P && 0 = arg2P && 0 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > -1 && arg1 > -1 && arg2 < 1001 && arg2 = arg3 && arg1+arg2 = arg1P && arg2+2 = arg2P && arg2+2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 1000 && arg2 = arg3 && 0 = arg1P && 0 = arg2P && 0 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > -1 && arg1 > -1 && arg2 < 1001 && arg2 = arg3 && arg1+arg2 = arg1P && arg2+3 = arg2P && arg2+3 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 0;

