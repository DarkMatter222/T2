START: 2;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 0 = arg2 && 0 = arg2P && 0 = arg3P && 0 = arg4P && 0 = arg5P && 0 = arg6P && 0 = arg7P && 0 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg1P <= arg1 && arg2P > -1 && arg1 > 0 && arg1P > 0 && 1 = arg2 && 0 = arg3P && 0 = arg4P && 0 = arg5P && 1 = arg6P && 1 = arg7P && 1 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg2P > -1 && arg3P > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 2 = arg2 && 0 = arg4P && 0 = arg5P && 2 = arg6P && 2 = arg7P && 2 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg2P > -1 && arg2 > 2 && arg4P > -1 && arg3P > -1 && arg1 >= arg1P && arg1 > 0 && arg1P > 0 && arg4P = arg5P && arg2 = arg6P && 3 = arg7P && arg2 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg5P := nondet();
 arg8P := nondet();
 assume(arg4 > -1 && arg6 > -1 && arg7 >= arg6 && 2*arg2 >= 0 && 3*arg3 >= 0 && 3*arg3-2*arg2 < 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg4 = arg5 && arg6 = arg8 && 0 = arg2P && 0 = arg3P && arg4 = arg5P && arg6 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg5 := arg5P;
 arg8 := arg8P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg4 > -1 && arg6 > -1 && arg7 > -1 && arg7 < arg6 && arg2P > -1 && arg7+1 >= arg6 && 2*arg2 >= 0 && 3*arg3 >= 0 && 2*arg2P >= 0 && 3*arg3-2*arg2 < 0-2*arg2P && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg4 = arg5 && arg6 = arg8 && 0 = arg3P && arg4-(0-2*arg2P) = arg4P && arg4-(0-2*arg2P) = arg5P && arg7+1 = arg7P && arg6 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume(arg6 > -1 && arg7+1 < arg6 && arg4 > -1 && arg7 > -1 && arg2P > -1 && arg3P > -1 && 2*arg2 >= 0 && 3*arg3 >= 0 && 2*arg2P >= 0 && 3*arg3P >= 0 && 3*arg3P-2*arg2P > 3*arg3-2*arg2 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg4 = arg5 && arg6 = arg8 && arg4-(3*arg3P-2*arg2P) = arg4P && arg4-(3*arg3P-2*arg2P) = arg5P && arg7+2 = arg7P && arg6 = arg8P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
TO: 0;

