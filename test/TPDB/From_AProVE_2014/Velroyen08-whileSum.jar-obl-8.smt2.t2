START: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1P > -1 && arg2 > 1 && arg2P > -1 && arg1 > 0 && arg1P+arg2P = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 x13 := nondet();
 assume(arg1 > -2 && arg2-2*x13 < 0 && arg3 > 0);
TO: 2;

FROM: 1;
 x17 := nondet();
 assume(arg1 > -2 && arg2-2*x17 > 0 && arg3 > 0);
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 x21 := nondet();
 assume(arg2-2*x21 > 0 && arg1 > -2 && arg2-2*x21 < 2 && arg3 > 0 && arg1+1 = arg1P && arg1+1+arg2 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 x25 := nondet();
 assume(arg1 > -2 && arg2-2*x25 = 0 && arg3 > 0);
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 x29 := nondet();
 assume(arg1 > -2 && arg3 > 0 && arg2-2*x29 = 0 && arg2-2*x29 < 2 && arg2-2*x29 >= 0 && arg1+1 = arg1P && arg2-2 = arg2P && arg1+1+arg2-2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 0;

