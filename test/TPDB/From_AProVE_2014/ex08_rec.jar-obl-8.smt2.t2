START: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && arg2 > -1 && 0 = arg1P && 0 = arg2P && 10*arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg3 < 10 && arg3 > 1 && arg3 = arg2P && arg2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg3 > 10 && arg3 = arg2P && arg2 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 < 2 && arg2 > 1 && 0 = arg3 && 0 = arg1P && 0 = arg2P && arg2-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 < 2 && 1 = arg3 && 1 = arg1P && 1 = arg2P && 2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 < 2 && 10 = arg3 && 0 = arg1P && 0 = arg2P && 9 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 < 2 && arg2 > 1 && 1 = arg3 && 1 = arg1P && 1 = arg2P && arg2+1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 0;

