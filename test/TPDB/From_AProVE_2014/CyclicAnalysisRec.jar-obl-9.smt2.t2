START: 6;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x5 := nondet();
 assume(x5 > -1 && arg2 > 0 && arg1P <= arg1 && arg2P-7 <= arg1 && arg3P-5 <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 7 && arg3P > 5 && 0 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x12 := nondet();
 assume(x12 > -1 && arg2 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 8 && arg3P > 6);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x19 := nondet();
 x13 := nondet();
 assume(x19 > -1 && x13 > 1 && arg1P <= arg1 && arg1P+7 <= arg2 && arg1P+5 <= arg3 && arg1 > 0 && arg2 > 7 && arg3 > 5 && arg1P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x26 := nondet();
 x27 := nondet();
 x28 := nondet();
 x20 := nondet();
 x29 := nondet();
 assume(x26 > arg4 && arg4 > 0 && x27 > arg4 && x28 > arg4 && x20 > 1 && x29 > -1 && arg1P <= arg1 && arg1P+6 <= arg2 && arg1P+4 <= arg3 && arg1 > 0 && arg2 > 6 && arg3 > 4 && arg1P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x33 := nondet();
 x34 := nondet();
 assume(x33 > -1 && arg2 > 1 && x34 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x42 := nondet();
 x43 := nondet();
 x44 := nondet();
 x35 := nondet();
 x45 := nondet();
 assume(x42 > arg4 && arg4 > 0 && x43 > arg4 && x44 > arg4 && x35 > 1 && x45 > -1 && arg1P <= arg1 && arg1P+6 <= arg2 && arg1P+4 <= arg3 && arg1 > 0 && arg2 > 6 && arg3 > 4 && arg1P > 0 && arg2P > 6);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x53 := nondet();
 x46 := nondet();
 assume(x53 > -1 && x46 > 1 && arg1P <= arg1 && arg1P+7 <= arg2 && arg1P+5 <= arg3 && arg2P-5 <= arg1 && arg2P+2 <= arg2 && arg2P <= arg3 && arg1 > 0 && arg2 > 7 && arg3 > 5 && arg1P > 0 && arg2P > 5);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x61 := nondet();
 x54 := nondet();
 assume(x61 > -1 && x54 > 1 && arg1P <= arg1 && arg1P+7 <= arg2 && arg1P+5 <= arg3 && arg1 > 0 && arg2 > 7 && arg3 > 5 && arg1P > 0 && arg2P > 6);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x66 := nondet();
 x67 := nondet();
 assume(x66 > -1 && arg2 > 1 && x67 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 6);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x75 := nondet();
 x76 := nondet();
 x77 := nondet();
 x68 := nondet();
 x78 := nondet();
 assume(x75 > arg4 && arg4 > 0 && x76 > arg4 && x77 > arg4 && x68 > 1 && x78 > -1 && arg1P <= arg1 && arg1P+6 <= arg2 && arg1P+4 <= arg3 && arg2P-5 <= arg1 && arg2P+1 <= arg2 && arg2P-1 <= arg3 && arg1 > 0 && arg2 > 6 && arg3 > 4 && arg1P > 0 && arg2P > 5);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x83 := nondet();
 x84 := nondet();
 assume(x83 > -1 && arg2 > 1 && x84 > -1 && arg1P <= arg1 && arg2P-5 <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 5);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P > -1 && arg2 > 0 && arg1 > 0 && 1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x94 := nondet();
 x95 := nondet();
 x96 := nondet();
 x88 := nondet();
 assume(x94 > arg4 && arg4 > 0 && x95 > arg4 && x96 > arg4 && x88 > 1 && arg1P > -1 && arg1 > 0 && arg2 > 6 && arg3 > 4 && 2 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x97 := nondet();
 assume(arg1P > -1 && x97 > 1 && arg1 > 0 && arg2 > 7 && arg3 > 5 && 2 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x106 := nondet();
 assume(x106 > -1 && arg2 > 1 && arg1P > -1 && arg1 > 0 && 2 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1-1 < arg1 && arg2 > 0 && arg1 > 1 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x110 := nondet();
 assume(arg1P-3 <= arg1 && x110 > 1 && arg2P-1 <= arg1 && arg1 > 0 && arg1P > 3 && arg2P > 1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x114 := nondet();
 assume(arg1P <= arg2 && x114 > 1 && arg2P+2 <= arg2 && arg1 > 0 && arg2 > 4 && arg1P > 4 && arg2P > 2);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P+2 <= arg1 && arg1P <= arg2 && arg2P+3 <= arg1 && arg2P+1 <= arg2 && arg1 > 2 && arg2 > 0 && arg1P > 0 && arg2P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

