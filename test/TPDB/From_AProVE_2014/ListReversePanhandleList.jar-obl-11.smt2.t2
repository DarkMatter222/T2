START: 6;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x5 := nondet();
 assume(arg1P > -1 && arg2 > 1 && x5 > -1 && arg2P-1 <= arg1 && arg3P-1 <= arg1 && arg1 > 0 && arg2P > 1 && arg3P > 1 && x5-2 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2 > 1 && arg4 < 1 && arg3 > 0 && arg1P > 0 && arg1-1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2P <= arg2 && arg4 > 0 && arg3P-2 <= arg3 && arg2 > 0 && arg3 > 0 && arg2P > 0 && arg3P > 2 && arg4-1 = arg4P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg2 > 0 && arg1P > 2 && arg2-1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 1 && arg4 < 1 && arg1P-3 <= arg2 && arg1P-3 <= arg3 && arg2 > 1 && arg3 > 1 && arg1P > 4 && arg1-2 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 < 2 && arg4 < 1 && arg1P <= arg2 && arg1P <= arg3 && arg2P <= arg2 && arg2P <= arg3 && arg2 > 1 && arg3 > 1 && arg1P > 1 && arg2P > 1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P-1 <= arg1 && arg2 < 1 && arg1 > 0 && arg1P > 1 && arg2P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P+1 <= arg1 && arg2 < 1 && arg1 > 2 && arg1P > 1 && arg2P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P+1 <= arg1 && arg2 < 1 && arg1 > 2 && arg1P > 1 && arg2P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P+1 <= arg2 && arg2P <= arg2 && arg3P <= arg1 && arg4P+1 <= arg2 && arg1 > 0 && arg2 > 0 && arg1P > -1 && arg2P > 0 && arg3P > 0 && arg4P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2P <= arg1 && arg2P+1 <= arg2 && arg2P <= arg4 && arg1 > -1 && arg2 > 0 && arg3 > 0 && arg4 > -1 && arg1P > 2 && arg2P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P-3 <= arg1 && arg1P-2 <= arg2 && arg1P-2 <= arg3 && arg1P-3 <= arg4 && arg2P <= arg1 && arg2P+1 <= arg2 && arg2P+1 <= arg3 && arg2P <= arg4 && arg1 > -1 && arg2 > 0 && arg3 > 0 && arg4 > -1 && arg1P > 2 && arg2P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg4 > 0 && arg4P < arg4 && arg1P-2 <= arg1 && arg1 > 0 && arg2 > 2 && arg1P > 2 && arg2P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg4 := arg4P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x79 := nondet();
 x78 := nondet();
 assume(x79 > 0 && x78 > -1 && x79 < x78 && arg3P-2 <= arg1 && arg1 > 0 && arg2 > 2 && arg1P > -1 && arg2P > 0 && arg3P > 2 && arg4P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x86 := nondet();
 x87 := nondet();
 assume(x86 > -1 && x87 < x86 && arg1P-2 <= arg1 && arg1P <= arg2 && arg2P <= arg1 && arg1 > 0 && arg2 > 2 && arg1P > 2 && arg2P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

