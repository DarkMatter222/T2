START: 2;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg1P <= arg1 && arg2 > -1 && arg1 > 0 && arg1P > 0 && 1 = arg2P && 1 = arg3P && 1 = arg4P && arg2 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg5 > arg3 && arg2 > 0 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg3 = arg4 && arg2+1 = arg2P && arg3*arg2 = arg3P && arg3*arg2 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg5 < arg3 && arg2 > 0 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg3 = arg4 && arg2+1 = arg2P && arg3*arg2 = arg3P && arg3*arg2 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 0;

