START: 4;

FROM: 0;
 x12 := nondet();
 x13 := nondet();
 x14 := nondet();
 assume(x12 > -1 && arg2 > 1 && x13-2*x14 = 1 && x13 > -1 && arg1 > 0);
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x18 := nondet();
 x19 := nondet();
 assume(arg1P > -1 && arg2 > 1 && x18-2*x19 = 1 && x18 > -1 && arg1 > 0 && x18-2*x19 < 2 && x18-2*x19 >= 0);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(0 = arg1 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 0;
 x22 := nondet();
 x23 := nondet();
 x24 := nondet();
 assume(x22 > -1 && arg2 > 1 && x23 > -1 && x23-2*x24 = 0 && arg1 > 0);
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x27 := nondet();
 x28 := nondet();
 x29 := nondet();
 assume(x27 > -1 && arg2 > 1 && x28 > -1 && x28-2*x29 = 0 && arg1 > 0 && x28-2*x29 < 2 && x28-2*x29 >= 0 && 0-x27 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 1 && arg1-2 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 < 0 && arg1 < 3 && arg1-2 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 0;

