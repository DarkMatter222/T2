START: 5;

FROM: 0;
 x14 := nondet();
 x15 := nondet();
 x16 := nondet();
 assume(x14 > -1 && arg2 > 1 && x15-2*x16 = 0 && x15 > -1 && arg1 > 0);
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x19 := nondet();
 x20 := nondet();
 x21 := nondet();
 assume(x19 > -1 && arg2 > 1 && x20-2*x21 = 0 && x20 > -1 && arg1 > 0 && x20-2*x21 < 2 && x20-2*x21 >= 0 && 0-x19 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 0;
 x24 := nondet();
 x25 := nondet();
 x26 := nondet();
 assume(x24 > -1 && arg2 > 1 && x25-2*x26 = 1 && x25 > -1 && arg1 > 0);
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x30 := nondet();
 x31 := nondet();
 assume(arg1P > -1 && arg2 > 1 && x30-2*x31 = 1 && x30 > -1 && arg1 > 0 && x30-2*x31 < 2 && x30-2*x31 >= 0);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume(0 = arg1 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 4;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 0 && arg1 < 6 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 4;

FROM: 2;
 arg2P := nondet();
 assume(arg1 < 1 && arg1 < 6 && arg1 > -6);
 arg2 := arg2P;
TO: 4;

FROM: 4;
 arg2P := nondet();
 assume(arg1 > -1);
 arg2 := arg2P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 < 0 && arg1+1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 0;

