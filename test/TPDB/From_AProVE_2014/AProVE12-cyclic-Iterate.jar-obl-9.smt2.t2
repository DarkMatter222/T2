START: 3;

FROM: 0;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg2 > -1 && arg2-1 = arg1P && 0 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2 > 0 && arg3P > arg3 && arg3 > 0 && arg1-1 = arg1P && arg1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2 > 0 && arg1-1 = arg1P && arg1 = arg2P && 1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg4P := nondet();
 assume(arg2 < 1 && arg3 > 0 && 0 = arg1P && arg3 = arg2P && 0 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg4 := arg4P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x19 := nondet();
 assume(arg1 > 0 && arg4 > 0 && arg3 > 0 && arg1P > arg1 && arg2 > arg1 && arg3P < arg3 && arg4P < arg4 && x19 > arg1);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x26 := nondet();
 assume(arg3P < arg2 && arg2 > 0 && x26 > arg4P && x26 > -1 && arg2 = arg3 && 1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

