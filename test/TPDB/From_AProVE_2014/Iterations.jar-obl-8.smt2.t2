START: 6;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg1P <= arg1 && arg2 > -1 && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg1P <= arg1 && arg3 > arg2 && arg1 > 0 && arg1P > 0 && 0 = arg3P && 2*arg2 = arg4P && arg3 = arg5P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg3 >= arg4 && arg5 > -1 && arg1 >= arg1P && arg1 > 0 && arg1P > 0 && arg2+1 = arg2P && arg5 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg4 > arg3 && arg3 > -1 && arg2 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg4 = arg3P && arg3 = arg4P && arg2+arg3 = arg5P && arg5 = arg6P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg1P <= arg1 && arg5 < 0 && arg1 > 0 && arg1P > 0 && arg4+1 = arg3P && arg3 = arg4P && arg6 = arg5P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 2;

FROM: 3;
 arg1P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(3*arg4 >= 0 && arg5 > -1 && 2*arg2 >= 0 && 2*arg2+3*arg4 >= 0 && 4*arg5 >= 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 0 = arg6P && 2*arg2+3*arg4+4*arg5 = arg7P && arg6 = arg8P);
 arg1 := arg1P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg1P <= arg1 && arg7 <= arg6 && arg1 > 0 && arg1P > 0 && arg5-1 = arg5P && arg8 = arg6P);
 arg1 := arg1P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(100*arg4 >= 0 && arg7 > arg6 && 1000*arg2 >= 0 && 10*arg5 >= 0 && 1000*arg2+100*arg4 >= 0 && 1000*arg2+100*arg4+10*arg5 >= 0 && arg6 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg7 = arg6P && arg6 = arg7P && 1000*arg2+100*arg4+10*arg5+arg6 = arg8P && arg8 = arg9P);
 arg1 := arg1P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume(arg1P <= arg1 && arg8 < 0 && arg1 > 0 && arg1P > 0 && arg7+1 = arg6P && arg6 = arg7P && arg9 = arg8P);
 arg1 := arg1P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 4;

FROM: 5;
 arg1P := nondet();
 arg8P := nondet();
 assume(arg1P <= arg1 && arg8 > -1 && arg1 > 0 && arg1P > 0 && arg8-1 = arg8P);
 arg1 := arg1P;
 arg8 := arg8P;
TO: 5;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 arg8P := nondet();
 arg9P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
 arg8 := arg8P;
 arg9 := arg9P;
TO: 0;

