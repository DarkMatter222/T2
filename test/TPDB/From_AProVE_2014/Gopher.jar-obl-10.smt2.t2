START: 6;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x7 := nondet();
 assume(x7 > -1 && arg2 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 0 && arg3P > -1);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg6P := nondet();
 assume(arg1 >= arg1P && arg1P <= arg2 && arg1P-1 <= arg3 && arg2P <= arg2 && arg3P+1 <= arg2 && arg3P <= arg3 && arg1 > 0 && arg2 > 0 && arg3 > -1 && arg1P > 0 && arg2P > 0 && arg3P > -1 && arg4+2 <= arg2 && arg5+2 <= arg2);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg6 := arg6P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg6P > -1 && arg2 > 1 && arg3P > -1 && arg1 > 0 && arg1P > 1 && 0 = arg2P && arg2 = arg4P && 2 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x30 := nondet();
 assume(arg5 > -1 && arg3 > arg2 && arg3 > 0 && arg4 > 1 && x30 > -1 && arg5 < arg4 && arg1 > 0 && arg1P > 3 && arg6+2 <= arg1 && arg2+1 = arg2P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x39 := nondet();
 assume(arg5 > -1 && arg3 > arg2 && arg3 > 0 && arg4 > 1 && x39 > -1 && arg5 < arg4 && arg1 > 0 && arg1P > 3 && arg6+2 <= arg1 && arg2+1 = arg2P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x48 := nondet();
 assume(arg5 > -1 && arg3 > arg2 && arg3 > 0 && arg4 > 1 && x48 > -1 && arg5 < arg4 && arg1 > 0 && arg1P > 2 && arg6+2 <= arg1 && arg2+1 = arg2P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x57 := nondet();
 assume(arg5 > -1 && arg3 > arg2 && arg3 > 0 && arg4 > 1 && x57 > -1 && arg5 < arg4 && arg1 > 0 && arg1P > 2 && arg6+2 <= arg1 && arg2+1 = arg2P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x58 := nondet();
 assume(arg1P <= arg2 && x58 > 1 && arg2P+1 <= arg2 && arg2P <= arg3 && arg1 > 0 && arg2 > 0 && arg3 > -1 && arg1P > 0 && arg2P > -1 && arg4+2 <= arg2 && arg5+2 <= arg2 && arg5 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg1P-2 <= arg1 && arg2P+3 <= arg1 && arg2P+1 <= arg2 && arg1 > 2 && arg2 > 0 && arg1P > 3 && arg2P > -1 && arg3+2 <= arg1 && 0 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 4;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg5 > -1 && arg3 > arg2 && arg3 > 0 && arg4 > 1 && arg2P > -1 && arg5 < arg4 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg6+2 <= arg1 && arg4 = arg3P && arg6 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg3 > 1 && arg4 < arg2 && arg1P+2 <= arg1 && arg1 > 2 && arg1P > 0 && arg4+2 <= arg1 && arg4P+4 <= arg1);
 arg1 := arg1P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg3 > 1 && arg4 >= arg2 && arg1P+2 <= arg1 && arg1 > 2 && arg1P > 0 && arg4+2 <= arg1 && arg4P+4 <= arg1);
 arg1 := arg1P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 5;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 0;

