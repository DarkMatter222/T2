START: 5;

FROM: 0;
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x45 := nondet();
 x46 := nondet();
 x47 := nondet();
 x48 := nondet();
 x49 := nondet();
 x50 := nondet();
 assume(x45 > -1 && arg2 > 3 && x46 > -1 && x47 > -1 && x47-2*x48 = 1 && x49-2*x50 = 0 && x49 > -1 && arg1 > 0);
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x53 := nondet();
 x55 := nondet();
 x56 := nondet();
 x57 := nondet();
 x58 := nondet();
 assume(arg3P > -1 && arg2 > 3 && x53 > -1 && x55 > -1 && x55-2*x56 = 1 && x57-2*x58 = 0 && x57 > -1 && arg1 > 0 && x55-2*x56 >= 0 && x55-2*x56 < 2 && x57-2*x58 < 2 && x57-2*x58 >= 0 && 0-x53 = arg1P && 0-x53 = arg2P && 0-x53 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 2;

FROM: 0;
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x61 := nondet();
 x62 := nondet();
 x63 := nondet();
 x64 := nondet();
 x65 := nondet();
 x66 := nondet();
 assume(x61 > -1 && arg2 > 3 && x62 > -1 && x63 > -1 && x63-2*x64 = 1 && x65-2*x66 = 1 && x65 > -1 && arg1 > 0);
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x71 := nondet();
 x72 := nondet();
 x73 := nondet();
 x74 := nondet();
 assume(arg1P > -1 && arg2 > 3 && arg2P > -1 && x71 > -1 && x71-2*x72 = 1 && x73-2*x74 = 1 && x73 > -1 && arg1 > 0 && x71-2*x72 >= 0 && x71-2*x72 < 2 && x73-2*x74 < 2 && x73-2*x74 >= 0 && arg1P = arg3P && arg2P = arg4P && arg1P = arg5P && arg2P = arg6P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 2;
 arg2P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg2 < 1 && arg1 < 1 && arg3 > arg2 && arg2 = arg4 && arg2+arg1 = arg2P && arg2+arg1 = arg4P);
 arg2 := arg2P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 2;

FROM: 0;
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x77 := nondet();
 x78 := nondet();
 x79 := nondet();
 x80 := nondet();
 x81 := nondet();
 x82 := nondet();
 assume(x77 > -1 && arg2 > 3 && x78 > -1 && x79 > -1 && x79-2*x80 = 0 && x81-2*x82 = 1 && x81 > -1 && arg1 > 0);
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x85 := nondet();
 x87 := nondet();
 x88 := nondet();
 x89 := nondet();
 x90 := nondet();
 assume(x85 > -1 && arg2 > 3 && arg2P > -1 && x87 > -1 && x87-2*x88 = 0 && x89-2*x90 = 1 && x89 > -1 && arg1 > 0 && x87-2*x88 >= 0 && x87-2*x88 < 2 && x89-2*x90 < 2 && x89-2*x90 >= 0 && 0-x85 = arg1P && 0-x85 = arg3P && arg2P = arg4P && 0-x85 = arg5P && arg2P = arg6P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 4;

FROM: 0;
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x93 := nondet();
 x94 := nondet();
 x95 := nondet();
 x96 := nondet();
 x97 := nondet();
 x98 := nondet();
 assume(x93 > -1 && arg2 > 3 && x94 > -1 && x95 > -1 && x95-2*x96 = 0 && x97-2*x98 = 0 && x97 > -1 && arg1 > 0);
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x101 := nondet();
 x102 := nondet();
 x103 := nondet();
 x104 := nondet();
 x105 := nondet();
 x106 := nondet();
 assume(x101 > -1 && arg2 > 3 && x102 > -1 && x103 > -1 && x103-2*x104 = 0 && x105-2*x106 = 0 && x105 > -1 && arg1 > 0 && x103-2*x104 >= 0 && x103-2*x104 < 2 && x105-2*x106 < 2 && x105-2*x106 >= 0 && 0-x101 = arg1P && 0-x102 = arg2P && 0-x101 = arg3P && 0-x102 = arg4P && 0-x101 = arg5P && 0-x102 = arg6P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 4;

FROM: 3;
 arg3P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg3 > -1 && arg1 > -1 && arg4 > arg3 && arg3 = arg5 && arg4 = arg6 && arg3+arg1 = arg3P && arg3+arg1 = arg5P && arg4 = arg6P);
 arg3 := arg3P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 3;
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg4 > -1 && arg2 > -1 && arg4 < arg3 && arg3 = arg5 && arg4 = arg6 && arg4+arg2 = arg4P && arg3 = arg5P && arg4+arg2 = arg6P);
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 3;

FROM: 4;
 arg3P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg3 < 1 && arg1 < 1 && arg4 > arg3 && arg3 = arg5 && arg4 = arg6 && arg3+arg1 = arg3P && arg3+arg1 = arg5P && arg4 = arg6P);
 arg3 := arg3P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 4;

FROM: 4;
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg4 < arg3 && arg3 = arg5 && arg4 = arg6 && arg4+arg2 = arg4P && arg3 = arg5P && arg4+arg2 = arg6P);
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 4;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 0;

