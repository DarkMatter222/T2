START: 5;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1P <= arg1 && arg2 > 0 && arg1 > 0 && arg1P > 0 && 0 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2P > -1 && arg2 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg3P := nondet();
 x7 := nondet();
 assume(arg1 >= arg1P && x7 > 1 && arg1 > 0 && arg1P > 0 && 0 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg3P := nondet();
 x11 := nondet();
 assume(x11 > 1 && arg3P > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 2;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && 0 = arg2 && 0 = arg1P && 0 = arg2P && 0 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 1;
 arg1P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && 0 = arg1P && 0 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 x19 := nondet();
 assume(arg1 > 0 && x19 > 1 && arg3 = arg1P);
 arg1 := arg1P;
TO: 3;

FROM: 3;
 arg3P := nondet();
 x28 := nondet();
 assume(arg2 > 1 && arg1 > 1 && arg2 > x28 && arg1 <= arg2 && arg1 = arg3 && arg1 = arg3P);
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > 1 && arg1 > 1 && arg1 <= arg2 && arg2 > arg2P && arg1 > arg2-arg1*arg2P && arg2-arg1*arg2P >= 0 && arg1 = arg3 && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 0;

