START: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg4P > -1 && arg2 > 1 && arg6P > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 1 && 0 = arg3P && 2 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x6 := nondet();
 x16 := nondet();
 assume(arg5 > -1 && arg4 > arg3 && arg4 > 0 && x6 > 1 && x16 > -1 && arg5 < x6 && arg1 >= arg1P && arg2 >= arg1P && arg1 > 0 && arg2 > 0 && arg1P > 0 && arg2P > 3 && arg2 >= arg6+2 && arg3+1 = arg3P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x17 := nondet();
 x27 := nondet();
 assume(arg5 > -1 && arg4 > arg3 && arg4 > 0 && x17 > 1 && x27 > -1 && arg5 < x17 && arg1P <= arg1 && arg1P <= arg2 && arg1 > 0 && arg2 > 0 && arg1P > 0 && arg2P > 3 && arg6+2 <= arg2 && arg3+1 = arg3P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x28 := nondet();
 x38 := nondet();
 assume(arg5 > -1 && arg4 > arg3 && arg4 > 0 && x28 > 1 && x38 > -1 && arg5 < x28 && arg1P <= arg1 && arg1P <= arg2 && arg1 > 0 && arg2 > 0 && arg1P > 0 && arg2P > 2 && arg6+2 <= arg2 && arg3+1 = arg3P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x39 := nondet();
 x49 := nondet();
 assume(arg5 > -1 && arg4 > arg3 && arg4 > 0 && x39 > 1 && x49 > -1 && arg5 < x39 && arg1P <= arg1 && arg1P <= arg2 && arg1 > 0 && arg2 > 0 && arg1P > 0 && arg2P > 2 && arg6+2 <= arg2 && arg3+1 = arg3P && arg5+1 = arg5P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 x50 := nondet();
 assume(arg5 > -1 && arg4 > arg3 && arg4 > 0 && x50 > 1 && arg2P > -1 && arg5 < x50 && arg1P <= arg2 && arg1 > 0 && arg2 > 0 && arg1P > 0 && arg6+2 <= arg2 && arg6 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg1P+2 <= arg1 && arg3 < arg2 && arg1 > 2 && arg1P > 0 && arg3+2 <= arg1 && arg3P+4 <= arg1);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume(arg1P+2 <= arg1 && arg3 >= arg2 && arg1 > 2 && arg1P > 0 && arg3+2 <= arg1 && arg3P+4 <= arg1);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 2;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
TO: 0;

