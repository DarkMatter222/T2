START: 2;

FROM: 0;
 arg1P := nondet();
 assume(arg1 > 0 && arg2 > -1 && arg2 = arg1P);
 arg1 := arg1P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 4 && arg2 > 0 && arg2 >= arg1 && arg1-1 = arg1P && arg2-1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2 > 0 && arg2 >= arg1 && arg1 < 5 && arg2-1-(arg1+1) <= 2 && arg1 > -1 && arg1+2 = arg1P && arg2-1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 assume(arg2 > 0 && arg2 >= arg1 && arg1 < 5 && arg2-1-(arg1+1) > 2 && arg1 > -1 && arg1+1 = arg1P);
 arg1 := arg1P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2 < arg1 && arg1 > 1 && arg2+1 >= 2*arg1 && arg2 > 0 && arg1+1 = arg1P && arg2+1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2 < arg1 && arg1 > 1 && arg2+1 < 2*arg1 && arg2 > 0 && arg1-1 = arg1P && arg2+1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 0;

