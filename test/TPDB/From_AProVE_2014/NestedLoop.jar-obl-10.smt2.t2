START: 5;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P <= arg1 && arg2 > -1 && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg2-1 = arg3P && arg2 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg3 > arg2 && arg2 < arg4 && arg4 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2+1 = arg2P && arg4-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg3 <= arg2 && arg4 > -1 && arg1 >= arg1P && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg4-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg2 > -1 && arg3 > arg2 && arg2P <= arg1 && arg1 > 0 && arg2P > 0 && arg2 = arg1P && arg2+1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg4 > -1 && arg4 <= arg3 && arg1P <= arg2 && arg2 > 0 && arg1P > 0 && arg1+1 = arg2P && arg4-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg3 <= arg2 && arg4 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg4-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg4 > -1 && arg3 > arg2 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2+1 = arg2P && arg4-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 x39 := nondet();
 x38 := nondet();
 assume(arg4 > arg3 && arg4 > arg1 && x39 >= x38 && arg2P <= arg2 && arg2 > 0 && arg2P > 0 && arg3+1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 x46 := nondet();
 x45 := nondet();
 assume(arg4 > arg3 && arg4 > arg1 && x46 < x45 && arg2P <= arg2 && arg2 > 0 && arg2P > 0 && arg3+1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

