START: 3;

FROM: 0;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg2 > -1 && arg2 = arg1P && arg2 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 >= arg2 && arg1 > 1 && arg2 > 4 && arg1 = arg3 && arg1-1 = arg1P && arg2-1 = arg2P && arg1-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 < arg2 && arg2 > 1 && arg1+1 >= 2*arg2 && arg1 > 0 && arg1 = arg3 && arg1+1 = arg3P && arg2+1 = arg4P);
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 < arg2 && arg2 > 1 && arg1+1 < 2*arg2 && arg1 > 0 && arg1 = arg3 && arg1+1 = arg3P && arg2-1 = arg4P);
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg2 > 1 && arg3 > 1 && arg4 > 0 && arg2 > arg1 && arg2 >= arg3 && arg1 <= arg4 && arg3 = arg1P && arg4 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg1 >= arg2 && arg2 < 5 && arg1-1-(arg2+1) <= 2 && arg2 > -1 && arg1 = arg3 && arg1-1 = arg1P && arg2+2 = arg2P && arg1-1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg1 >= arg2 && arg2 < 5 && arg1-1-(arg2+1) > 2 && arg2 > -1 && arg1 = arg3 && arg2+1 = arg2P && arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

