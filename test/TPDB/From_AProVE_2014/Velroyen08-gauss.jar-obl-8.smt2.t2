START: 3;

FROM: 0;
 x11 := nondet();
 x12 := nondet();
 x13 := nondet();
 assume(x11 > -1 && arg2 > 1 && x12-2*x13 = 1 && x12 > -1 && arg1 > 0);
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x17 := nondet();
 x18 := nondet();
 assume(arg1P > -1 && arg2 > 1 && x17-2*x18 = 1 && x17 > -1 && arg1 > 0 && x17-2*x18 < 2 && x17-2*x18 >= 0);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 0;
 x21 := nondet();
 x22 := nondet();
 x23 := nondet();
 assume(x21 > -1 && arg2 > 1 && x22-2*x23 = 0 && x22 > -1 && arg1 > 0);
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x26 := nondet();
 x27 := nondet();
 x28 := nondet();
 assume(x26 > -1 && arg2 > 1 && x27-2*x28 = 0 && x27 > -1 && arg1 > 0 && x27-2*x28 < 2 && x27-2*x28 >= 0 && 0-x26 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 < 0 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 0 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 0;

