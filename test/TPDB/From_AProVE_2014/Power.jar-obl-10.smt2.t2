START: 9;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P <= arg1 && arg2 > -1 && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x8 := nondet();
 assume(arg3 > arg2 && arg3 > 0 && x8 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg3 = arg4P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > arg2 && arg3 > 0 && arg2P > -1 && arg1 > 0 && arg3 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 1;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > arg2 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 1 = arg3P && arg3 = arg4P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg4P := nondet();
 x21 := nondet();
 assume(arg3 > arg2 && arg3 > 0 && x21 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg3 = arg4P);
 arg1 := arg1P;
 arg4 := arg4P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg4 > 0 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg4 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg2P > -1 && arg2 < arg3 && arg1 > 0 && arg3 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 x36 := nondet();
 assume(arg3 > 0 && x36 > -1 && arg2 < arg3 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg3 = arg4P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 4;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg2 < arg3 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 1 = arg3P && arg3 = arg4P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 5;

FROM: 4;
 arg1P := nondet();
 arg4P := nondet();
 x45 := nondet();
 assume(arg3 > 0 && x45 > -1 && arg2 < arg3 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg3 = arg4P);
 arg1 := arg1P;
 arg4 := arg4P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P <= arg1 && arg4 > 0 && arg1 > 0 && arg1P > 0 && 1 = arg3 && arg2+1 = arg2P && arg4 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg4 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2+1 = arg2P && arg4 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 3;
 arg3P := nondet();
 arg4P := nondet();
 x69 := nondet();
 assume(arg1 > 0 && arg2 > 1 && arg1*arg1 >= 1 && x69 > 0 && arg2 > x69);
 arg3 := arg3P;
 arg4 := arg4P;
TO: 6;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 0 && arg2 > 1 && arg1*arg1 >= 1 && arg2 > arg2P && arg2P > 0 && arg2-2*arg2P < 2 && arg2-2*arg2P >= 0 && arg1*arg1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg4 > 0 && arg1 > 0 && arg3 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 7;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg3 > 0 && arg4 > 0 && arg1 > 0 && arg3 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 8;

FROM: 7;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 1 && arg1-1 < arg1 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 8;

FROM: 8;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1 > 1 && arg1-1 < arg1 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 7;

FROM: 9;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

