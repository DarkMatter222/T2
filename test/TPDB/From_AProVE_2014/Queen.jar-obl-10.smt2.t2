START: 7;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(arg1 > 0 && arg2 > -1 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 1;
 arg2P := nondet();
 arg3P := nondet();
 x2 := nondet();
 assume(arg1 < x2 && 0 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg2P := nondet();
 arg3P := nondet();
 x4 := nondet();
 assume(arg2 < x4 && x4 > 0 && arg2+1 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 x7 := nondet();
 x10 := nondet();
 assume(x7 > 0 && arg2 < x7 && x10 > 0 && arg1 > -1 && arg1 < x7 && arg1+1 > arg1 && arg1+1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 2;
 arg2P := nondet();
 arg3P := nondet();
 x11 := nondet();
 x14 := nondet();
 assume(x11 > 0 && arg2 < x11 && x14 > 0 && arg1 > -1 && arg1 < x11 && arg1+1 > arg1 && arg2+1 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 2;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 x15 := nondet();
 assume(arg1 >= x15 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 3;
 arg2P := nondet();
 arg3P := nondet();
 x17 := nondet();
 assume(arg1 < x17 && 0 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 x19 := nondet();
 assume(arg2 >= x19 && arg1+1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 3;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 x25 := nondet();
 x22 := nondet();
 assume(x25 < arg2 && arg2 < x22 && arg1 < x22 && arg2+1 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 x46 := nondet();
 x49 := nondet();
 assume(x46 > arg2 && arg2 < x49 && arg1 < x49 && arg2+1 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 4;
 arg2P := nondet();
 arg3P := nondet();
 x26 := nondet();
 assume(arg2 < x26 && arg1 < x26 && arg2+1 = arg2P);
 arg2 := arg2P;
 arg3 := arg3P;
TO: 4;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 x29 := nondet();
 assume(arg2 < x29 && x29 > 0 && 1 = arg1P && 0 = arg2P && arg1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg3P := nondet();
 x32 := nondet();
 assume(arg3 > 0 && x32 > 0 && arg1 > 0 && arg2 < x32 && arg3 > arg2 && arg3 = arg1P && 1 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 6;

FROM: 5;
 arg1P := nondet();
 arg3P := nondet();
 x36 := nondet();
 assume(arg3 > 0 && x36 > 0 && arg1 > 0 && arg2 < x36 && arg3 > arg2 && arg3 = arg1P && 0 = arg3P);
 arg1 := arg1P;
 arg3 := arg3P;
TO: 6;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg3 > arg2 && 0 = arg1 && 0 = arg1P && arg2+1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 5;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(1 = arg3 && 0 = arg1P && arg2+1 = arg2P && arg1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 5;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume(0 = arg3 && 1 = arg1P && arg2+1 = arg2P && arg1 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 5;

FROM: 7;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 0;

