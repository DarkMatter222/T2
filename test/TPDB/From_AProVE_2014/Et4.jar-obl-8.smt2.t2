START: 2;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 assume(arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 0 = arg2 && 0 = arg2P && 0 = arg3P && 0 = arg4P && 0 = arg5P && 0 = arg6P && 0 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 assume(arg1P <= arg1 && arg2P > -1 && arg1 > 0 && arg1P > 0 && 1 = arg2 && 0 = arg3P && 0 = arg4P && 1 = arg5P && 1 = arg6P && 1 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 assume(arg2P > -1 && arg4P > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && 2 = arg2 && 0 = arg3P && 2 = arg5P && 2 = arg6P && 2 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 x14 := nondet();
 assume(arg2P > -1 && arg2 > 2 && x14 > -1 && arg3P > -1 && arg1 >= arg1P && arg1 > 0 && arg1P > 0 && x14-arg3P = arg4P && arg2 = arg5P && 3 = arg6P && arg2 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg7P := nondet();
 assume(arg4 > 0 && arg2 > -1 && arg6 >= arg5 && arg5 > -1 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2 = arg3 && arg5 = arg7 && arg2+1 = arg2P && arg2+1 = arg3P && 10-(arg2+1) = arg4P && arg5 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg7 := arg7P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 x27 := nondet();
 assume(arg5 > -1 && arg4 > 0 && arg6 > -1 && arg6 < arg5 && x27 > -1 && arg2 > -1 && arg2+1+x27 >= 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2 = arg3 && arg5 = arg7 && arg2+1+x27 = arg2P && arg2+1+x27 = arg3P && 10-(arg2+1+x27) = arg4P && arg6+1 = arg6P && arg5 = arg7P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg6 := arg6P;
 arg7 := arg7P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 arg6P := nondet();
 arg7P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
 arg6 := arg6P;
 arg7 := arg7P;
TO: 0;

