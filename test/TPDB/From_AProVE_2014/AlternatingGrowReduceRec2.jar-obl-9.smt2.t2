START: 4;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 x4 := nondet();
 assume(x4 > -1 && arg2 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 2);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 x9 := nondet();
 assume(x9 > -1 && arg2 > 0 && arg1P <= arg1 && arg2P-1 <= arg1 && arg1 > 0 && arg1P > 0 && arg2P > 1);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 x10 := nondet();
 assume(arg2P <= arg2 && x10 > 0 && arg1 > 0 && arg2 > 0 && arg2P > 0 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1P > -1 && arg2 > 0 && arg1 > 0);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 1 && arg1-1 < arg1 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2P+1 <= arg2 && arg2 > 0 && arg2P > -1 && 0 = arg1 && 1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2P+1 <= arg2 && arg2 > 0 && arg2P > -1 && 2 = arg1 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2P-2 <= arg2 && arg2 > 0 && arg2P > 2 && 1 = arg1 && 2 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 0;

