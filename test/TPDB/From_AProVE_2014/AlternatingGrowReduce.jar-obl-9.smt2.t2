START: 4;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2P <= arg1 && arg1 > 0 && arg2P > 0 && arg2+2 <= arg1 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 x6 := nondet();
 assume(x6 > -1 && arg2 > 0 && arg1 > 0 && arg2P > 0 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2P+7 <= arg2 && arg2 > 6 && arg2P > -1 && 0 = arg1 && 1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2 >= arg2P-2 && arg2 > 0 && arg2P > 2 && 1 = arg1 && 2 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg2P-4 <= arg2 && arg2 > 0 && arg2P > 4 && 2 = arg1 && 0 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 1;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1P > -1 && arg2 > 0 && arg1 > 0);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 assume(arg1 > 0 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
TO: 3;

FROM: 4;
 arg1P := nondet();
 arg2P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
TO: 2;

