START: 3;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume(arg1P <= arg1 && arg2 > -1 && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg2 = arg3P && arg2 = arg4P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 1;

FROM: 1;
 x7 := nondet();
 assume(arg4 > -1 && arg3 > 0 && x7 <= arg1 && arg1 > 0 && x7 > 0);
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 x13 := nondet();
 assume(arg4 > -1 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg4-arg2-2*x13 < 2 && arg4-arg2-2*x13 >= 0 && arg2+x13 = arg2P && arg4-(arg2+x13) = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
TO: 1;

FROM: 3;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
TO: 0;

