START: 7;

FROM: 0;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg1P <= arg1 && arg2 > -1 && arg1 > 0 && arg1P > 0 && 0 = arg2P && arg2 = arg3P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg3 > arg2 && arg3 > 0 && arg1P <= arg1 && arg1 > 0 && arg1P > 0 && arg2+1 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 1;

FROM: 1;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg3 > arg2 && arg3 > 0 && arg1 > 0 && 0 = arg1P && arg3 = arg2P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 2;

FROM: 2;
 arg1P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg2 >= arg1 && arg1 > -1 && arg2 > 0 && arg1+1 = arg1P);
 arg1 := arg1P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 2;

FROM: 2;
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg2 > 0 && arg2 >= arg1 && 0 = arg2P && 2*arg1 = arg3P);
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 3;

FROM: 3;
 arg2P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg1 > -1 && arg3 >= arg2 && arg2 > -1 && arg2+1 = arg2P);
 arg2 := arg2P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 3;

FROM: 3;
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg1 > -1 && arg3 >= arg2 && arg2 > -1 && arg1+arg2 = arg3P);
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 4;

FROM: 4;
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(3*arg2 >= 0 && arg3 > -1 && 2*arg1 >= 0 && 2*arg1+3*arg2 >= 0 && 4*arg3 >= 0 && arg3-1 = arg3P);
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 4;

FROM: 4;
 arg4P := nondet();
 arg5P := nondet();
 assume(3*arg2 >= 0 && arg3 > -1 && 2*arg1 >= 0 && 2*arg1+3*arg2 >= 0 && 4*arg3 >= 0 && 0 = arg4P && 2*arg1+3*arg2+4*arg3 = arg5P);
 arg4 := arg4P;
 arg5 := arg5P;
TO: 5;

FROM: 5;
 arg4P := nondet();
 assume(100*arg2 >= 0 && arg5 >= arg4 && 1000*arg1 >= 0 && 10*arg3 >= 0 && 1000*arg1+100*arg2 >= 0 && arg3 > -1 && 1000*arg1+100*arg2+10*arg3 >= 0 && arg4 > -1 && arg4+1 = arg4P);
 arg4 := arg4P;
TO: 5;

FROM: 5;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(100*arg2 >= 0 && arg5 >= arg4 && 1000*arg1 >= 0 && 10*arg3 >= 0 && 1000*arg1+100*arg2 >= 0 && arg3 > -1 && arg4 > -1 && 1000*arg1+100*arg2+10*arg3 >= 0 && 1000*arg1+100*arg2+10*arg3+arg4 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 6;

FROM: 6;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume(arg1 > -1 && arg1-1 = arg1P);
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 6;

FROM: 7;
 arg1P := nondet();
 arg2P := nondet();
 arg3P := nondet();
 arg4P := nondet();
 arg5P := nondet();
 assume((0 <= 0));
 arg1 := arg1P;
 arg2 := arg2P;
 arg3 := arg3P;
 arg4 := arg4P;
 arg5 := arg5P;
TO: 0;

